From 0a56e280f89632864fbe92110b5aae40a24a68a6 Mon Sep 17 00:00:00 2001
From: Lars Uebernickel <lars.uebernickel@canonical.com>
Date: Wed, 8 May 2013 13:21:55 -0700
Subject: [PATCH] Allow custom menu items from gtk_menu_new_from_model

Provide UbuntuMenuItemFactory, an interface that can be implemented by
extension points. It has one function: create a GtkMenuItem for a
GMenuItem and a GActionGroup, keyed by the type given in the
x-canonical-type attribute.

This is not considered to be public API.
---
 gtk/Makefile.am             |   3 +
 gtk/gtkmodelmenu.c          | 147 +++++++++++++++++++++++++++++++++++++++++++-
 gtk/ubuntu-private.h        |  32 ++++++++++
 gtk/ubuntumenuitemfactory.c |  38 ++++++++++++
 gtk/ubuntumenuitemfactory.h |  57 +++++++++++++++++
 5 files changed, 276 insertions(+), 1 deletion(-)
 create mode 100644 gtk/ubuntu-private.h
 create mode 100644 gtk/ubuntumenuitemfactory.c
 create mode 100644 gtk/ubuntumenuitemfactory.h

Index: gtk+3.0-3.8.2/gtk/Makefile.am
===================================================================
--- gtk+3.0-3.8.2.orig/gtk/Makefile.am	2013-08-15 22:30:36.711735362 -0500
+++ gtk+3.0-3.8.2/gtk/Makefile.am	2013-08-15 22:30:36.703735295 -0500
@@ -175,6 +175,7 @@
 
 gtk_public_h_sources = 		\
 	gtk.h			\
+	ubuntu-private.h	\
 	gtkx.h			\
 	gtk-a11y.h		\
 	gtkaboutdialog.h	\
@@ -277,6 +278,7 @@
 	gtklockbutton.h		\
 	gtkmain.h		\
 	gtkmenu.h		\
+	ubuntumenuitemfactory.h	\
 	gtkmenubar.h		\
 	gtkmenubutton.h		\
 	gtkmenuitem.h		\
@@ -765,6 +767,7 @@
 	gtkmisc.c		\
 	gtkmnemonichash.c	\
 	gtkmodelmenu.c		\
+	ubuntumenuitemfactory.c	\
 	gtkmodelmenuitem.c	\
 	gtkmodifierstyle.c	\
 	gtkmodules.c		\
Index: gtk+3.0-3.8.2/gtk/gtkmodelmenu.c
===================================================================
--- gtk+3.0-3.8.2.orig/gtk/gtkmodelmenu.c	2013-08-15 22:30:36.711735362 -0500
+++ gtk+3.0-3.8.2/gtk/gtkmodelmenu.c	2013-08-15 22:32:02.856649676 -0500
@@ -28,6 +28,8 @@
 #include "gtkseparatormenuitem.h"
 #include "gtkmodelmenuitem.h"
 #include "gtkapplicationprivate.h"
+#include "gtkwidgetprivate.h"
+#include "ubuntumenuitemfactory.h"
 
 #define MODEL_MENU_WIDGET_DATA "gtk-model-menu-widget-data"
 
@@ -72,6 +74,149 @@
   g_slice_free (GtkModelMenuBinding, binding);
 }
 
+static gboolean
+object_class_has_property (GObjectClass *class,
+                           const gchar  *name,
+                           GType         type)
+{
+  GParamSpec *pspec;
+
+  pspec = g_object_class_find_property (class, name);
+  return pspec != NULL && G_PARAM_SPEC_VALUE_TYPE (pspec) == type;
+}
+
+static GtkMenuItem *
+gtk_model_menu_create_item_from_type (GType      type,
+                                      GMenuItem *menuitem)
+{
+  GObjectClass *class;
+  GtkMenuItem *item = NULL;
+
+  class = g_type_class_ref (type);
+
+  if (g_type_is_a (type, GTK_TYPE_MENU_ITEM) &&
+      object_class_has_property (class, "menu-item", G_TYPE_MENU_ITEM) &&
+      object_class_has_property (class, "action-group", G_TYPE_ACTION_GROUP))
+    {
+      item = g_object_new (type,
+                           "menu-item", menuitem,
+                           NULL);
+
+      g_object_set (item,
+                    "action-group", _gtk_widget_get_action_muxer (GTK_WIDGET (item)),
+                    NULL);
+    }
+  else
+    {
+      g_warning ("gtk_menu_new_from_model: cannot create menu item from type '%s'.\n"
+                 "  Does it derive from GtkMenuItem and have 'menu-item' and 'action-group' properties?",
+                 g_type_name (type));
+    }
+
+  g_type_class_unref (class);
+  return item;
+}
+
+static GtkMenuItem *
+gtk_model_menu_create_custom_item_from_factory (const gchar  *typename,
+                                                GMenuItem    *menuitem,
+                                                GActionGroup *actions)
+{
+  GList *it;
+  static GList *factories = NULL;
+
+  if (factories == NULL)
+    {
+      GIOExtensionPoint *ep;
+
+      g_type_ensure (UBUNTU_TYPE_MENU_ITEM_FACTORY);
+      ep = g_io_extension_point_lookup (UBUNTU_MENU_ITEM_FACTORY_EXTENSION_POINT_NAME);
+      for (it = g_io_extension_point_get_extensions (ep); it != NULL; it = it->next)
+        {
+          GIOExtension *ext = it->data;
+          UbuntuMenuItemFactory *factory;
+
+          factory = g_object_new (g_io_extension_get_type (ext), NULL);
+          factories = g_list_prepend (factories, factory);
+        }
+      factories = g_list_reverse (factories);
+    }
+
+  for (it = factories; it != NULL; it = it->next)
+    {
+      UbuntuMenuItemFactory *factory = it->data;
+      GtkMenuItem *item;
+
+      item = ubuntu_menu_item_factory_create_menu_item (factory, typename, menuitem, actions);
+      if (item)
+        return item;
+    }
+
+  return NULL;
+}
+
+static GtkMenuItem *
+gtk_model_menu_create_custom_item (GMenuModel  *menu,
+                                   gint         item_index,
+                                   const gchar *action_namespace,
+                                   GtkWidget   *parent)
+{
+  GMenuItem *menuitem;
+  gchar *typename;
+  GtkMenuItem *item = NULL;
+
+  menuitem = g_menu_item_new_from_model (menu, item_index);
+  if (action_namespace)
+    {
+      gchar *action = NULL;
+      gchar *fullname = NULL;
+
+      g_menu_item_get_attribute (menuitem, G_MENU_ATTRIBUTE_ACTION, "s", &action);
+      if (action)
+        {
+          fullname = g_strconcat (action_namespace, ".", action, NULL);
+          g_menu_item_set_attribute (menuitem, G_MENU_ATTRIBUTE_ACTION, "s", fullname);
+
+          g_free (action);
+          g_free (fullname);
+        }
+    }
+
+  if (g_menu_model_get_item_attribute (menu, item_index, "x-canonical-type", "s", &typename))
+    {
+      GActionGroup *actions;
+
+      /* Passing the parent muxer is wrong, but we'll only have access
+       * to the menuitem's muxer after the widget has been created.
+       * Thus we'd need some other form of passing the action group to
+       * the widget, which would complicate things for no practical
+       * reason: the panel service is the only consumer of this API and
+       * it will never call gtk_widget_insert_action_group() on the
+       * returned menu item.
+       */
+      actions = G_ACTION_GROUP (_gtk_widget_get_action_muxer (parent));
+      item = gtk_model_menu_create_custom_item_from_factory (typename, menuitem, actions);
+
+      /* continue supporting GTypes for now (the "old" behavior) */
+      if (item == NULL)
+        {
+          GType type;
+
+          type = g_type_from_name (typename);
+          if (type > 0)
+            item = gtk_model_menu_create_item_from_type (type, menuitem);
+        }
+
+      if (item == NULL)
+        g_warning ("gtk_menu_new_from_model: cannot find type '%s'", typename);
+
+      g_free (typename);
+    }
+
+  g_object_unref (menuitem);
+  return item;
+}
+
 static void
 gtk_model_menu_binding_append_item (GtkModelMenuBinding  *binding,
                                     GMenuModel           *model,
@@ -106,7 +251,10 @@
     {
       GtkMenuItem *item;
 
-      item = gtk_model_menu_item_new (model, item_index, action_namespace);
+      item = gtk_model_menu_create_custom_item (model, item_index, action_namespace, GTK_WIDGET (binding->shell));
+      if (item == NULL)
+        item = gtk_model_menu_item_new (model, item_index, action_namespace);
+
       gtk_menu_shell_append (binding->shell, GTK_WIDGET (item));
       gtk_widget_show (GTK_WIDGET (item));
       binding->n_items++;
Index: gtk+3.0-3.8.2/gtk/ubuntu-private.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gtk+3.0-3.8.2/gtk/ubuntu-private.h	2013-08-15 22:30:36.707735329 -0500
@@ -0,0 +1,32 @@
+/*
+* Copyright 2013 Canonical Ltd.
+*
+* This program is free software: you can redistribute it and/or modify it
+* under the terms of the GNU General Public License version 3, as published
+* by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranties of
+* MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
+* PURPOSE.  See the GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program.  If not, see <http://www.gnu.org/licenses/>.
+*
+* Authors:
+*     Lars Uebernickel <lars.uebernickel@canonical.com>
+*/
+
+/*
+ * Warning: this file is not part of gtk+, but an Ubuntu-specific extension.
+ * The API provided here is meant to be used only from Unity.
+ *
+ * Applications should not use this.
+ */
+
+#ifndef __UBUNTU_PRIVATE_H__
+#define __UBUNTU_PRIVATE_H__
+
+#include "ubuntumenuitemfactory.h"
+
+#endif
Index: gtk+3.0-3.8.2/gtk/ubuntumenuitemfactory.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gtk+3.0-3.8.2/gtk/ubuntumenuitemfactory.c	2013-08-15 22:30:36.707735329 -0500
@@ -0,0 +1,38 @@
+/*
+* Copyright 2013 Canonical Ltd.
+*
+* This program is free software: you can redistribute it and/or modify it
+* under the terms of the GNU General Public License version 3, as published
+* by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranties of
+* MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
+* PURPOSE.  See the GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program.  If not, see <http://www.gnu.org/licenses/>.
+*
+* Authors:
+*     Lars Uebernickel <lars.uebernickel@canonical.com>
+*/
+
+#include "ubuntumenuitemfactory.h"
+
+G_DEFINE_INTERFACE_WITH_CODE (UbuntuMenuItemFactory, ubuntu_menu_item_factory, G_TYPE_OBJECT,
+  GIOExtensionPoint *ep = g_io_extension_point_register (UBUNTU_MENU_ITEM_FACTORY_EXTENSION_POINT_NAME);
+  g_io_extension_point_set_required_type (ep, g_define_type_id);)
+
+static void
+ubuntu_menu_item_factory_default_init (UbuntuMenuItemFactoryInterface *iface)
+{
+}
+
+GtkMenuItem *
+ubuntu_menu_item_factory_create_menu_item (UbuntuMenuItemFactory *factory,
+                                           const gchar           *type,
+                                           GMenuItem             *menuitem,
+                                           GActionGroup          *actions)
+{
+  return UBUNTU_MENU_ITEM_FACTORY_GET_IFACE (factory)->create_menu_item (factory, type, menuitem, actions);
+}
Index: gtk+3.0-3.8.2/gtk/ubuntumenuitemfactory.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ gtk+3.0-3.8.2/gtk/ubuntumenuitemfactory.h	2013-08-15 22:30:36.707735329 -0500
@@ -0,0 +1,57 @@
+/*
+* Copyright 2013 Canonical Ltd.
+*
+* This program is free software: you can redistribute it and/or modify it
+* under the terms of the GNU General Public License version 3, as published
+* by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but
+* WITHOUT ANY WARRANTY; without even the implied warranties of
+* MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
+* PURPOSE.  See the GNU General Public License for more details.
+*
+* You should have received a copy of the GNU General Public License along
+* with this program.  If not, see <http://www.gnu.org/licenses/>.
+*
+* Authors:
+*     Lars Uebernickel <lars.uebernickel@canonical.com>
+*/
+
+#ifndef __UBUNTU_MENU_ITEM_FACTORY_H__
+#define __UBUNTU_MENU_ITEM_FACTORY_H__
+
+#include <gio/gio.h>
+#include "gtkmenuitem.h"
+
+G_BEGIN_DECLS
+
+#define UBUNTU_TYPE_MENU_ITEM_FACTORY         (ubuntu_menu_item_factory_get_type ())
+#define UBUNTU_MENU_ITEM_FACTORY(o)           (G_TYPE_CHECK_INSTANCE_CAST ((o), UBUNTU_TYPE_MENU_ITEM_FACTORY, UbuntuMenuItemFactory))
+#define UBUNTU_IS_MENU_ITEM_FACTORY(o)        (G_TYPE_CHECK_INSTANCE_TYPE ((o), UBUNTU_TYPE_MENU_ITEM_FACTORY))
+#define UBUNTU_MENU_ITEM_FACTORY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), UBUNTU_TYPE_MENU_ITEM_FACTORY, UbuntuMenuItemFactoryInterface))
+
+#define UBUNTU_MENU_ITEM_FACTORY_EXTENSION_POINT_NAME "ubuntu-menu-item-factory"
+
+typedef struct _UbuntuMenuItemFactoryInterface UbuntuMenuItemFactoryInterface;
+typedef struct _UbuntuMenuItemFactory          UbuntuMenuItemFactory;
+
+struct _UbuntuMenuItemFactoryInterface
+{
+  GTypeInterface iface;
+
+  GtkMenuItem * (*create_menu_item)  (UbuntuMenuItemFactory *factory,
+                                      const gchar           *type,
+                                      GMenuItem             *menuitem,
+                                      GActionGroup          *actions);
+};
+
+GType                   ubuntu_menu_item_factory_get_type      (void);
+
+GtkMenuItem *           ubuntu_menu_item_factory_create_menu_item (UbuntuMenuItemFactory *factory,
+                                                                   const gchar           *type,
+                                                                   GMenuItem             *menuitem,
+                                                                   GActionGroup          *actions);
+
+G_END_DECLS
+
+#endif
Index: gtk+3.0-3.8.2/gtk/gtk.symbols
===================================================================
--- gtk+3.0-3.8.2.orig/gtk/gtk.symbols	2013-08-15 22:30:36.711735362 -0500
+++ gtk+3.0-3.8.2/gtk/gtk.symbols	2013-08-15 22:30:36.711735362 -0500
@@ -4056,3 +4056,5 @@
 gtk_window_unmaximize
 gtk_window_unstick
 gtk_wrap_mode_get_type
+ubuntu_menu_item_factory_create_menu_item
+ubuntu_menu_item_factory_get_type
